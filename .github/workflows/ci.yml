name: Checks

on:
  pull_request:
    branches: ["**"]
  push:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  python:
    name: Python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - name: Set up Python 3.10
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.10.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Setup Virtualenv Cache
        uses: actions/cache@v4.0.1
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python Dependencies
        run: |
          poetry check --lock
          poetry install
      - name: Lint Python code using ruff
        run: |
          poetry run ruff format . --check
          poetry run ruff check .
      - name: Check type annotations using mypy
        run: poetry run mypy
      - name: Check if requirements are up-to-date
        run: poetry export --with=dev --output requirements/requirements.container.txt && git diff --exit-code
      - name: Run pre-commit hooks
        run: |
          cp docker/.env.sample docker/.env
          poetry run pre-commit run --all-files
        env:
          # Skip redundant hooks that are already covered elsewhere in
          # this Github workflow
          SKIP: lint-python,format-python,typecheck-python,update-requirements,hadolint-docker,shellcheck,checkmake
      - name: Set up NodeJS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "20"
      - name: Install NodeJS Dependencies
        run: npm install -g aws-cdk
      - name: Synthesize CDK deployment package
        run: poetry run cdk synth --strict
  tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - name: Run the checks inside Docker
        uses: addnab/docker-run-action@v3
        with:
          image: amazon/aws-glue-libs:glue_libs_4.0.0_image_01
          options: --volume ${{ github.workspace }}:/home/glue_user/workspace --env AWS_REGION=us-east-1
          run: |
            pip3 install --no-warn-script-location --user --upgrade pip==24.0
            pip3 install --no-warn-script-location --user -r requirements/requirements.container.txt
            python3 -m pytest -p no:cacheprovider
  pip-audit:
    name: Audit requirements
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - name: Audit requirements using pip-audit
        uses: pypa/gh-action-pip-audit@v1.0.8
        with:
          inputs: requirements/requirements.container.txt
  shell:
    name: Shell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - name: Check shell scripts using shellcheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          scandir: "."
  dockerfile:
    name: Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - name: Validate Dockerfile using hadolint
        uses: hadolint/hadolint-action@v3.1.0
  makefile:
    name: Makefile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - name: Check Makefile using checkmake
        uses: Uno-Takashi/checkmake-action@v2
