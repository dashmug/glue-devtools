name: Checks

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['main']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  python:
    name: Python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Setup Virtualenv Cache
        uses: actions/cache@v4.0.1
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Set up Python 3.10
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.10.13"
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v9
      - name: Install Python Dependencies
        run: |
          poetry check --lock
          poetry install --no-root
      - name: Lint Python code using ruff
        run: |
          poetry run ruff format . --check
          poetry run ruff check .
      - name: Check type annotations using mypy
        run: poetry run mypy
      - name: Check if requirements.txt is up-to-date
        run: poetry export --with=dev --output requirements.txt && git diff --exit-code
      - name: Audit Python dependencies
        run: poetry run pip-audit --requirement requirements.container.txt 
        continue-on-error: true
  pip-audit:
    name: Audit requirements
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Audit requirements using pip-audit
        uses: pypa/gh-action-pip-audit@v1.0.8
        with:
          inputs: requirements.container.txt
  tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Run the checks inside Docker
        uses: addnab/docker-run-action@v3
        with:
          image: amazon/aws-glue-libs:glue_libs_4.0.0_image_01
          options: --volume ${{ github.workspace }}:/home/glue_user/workspace --env AWS_REGION=us-east-1
          run: |
            pip3 install --no-warn-script-location --user --upgrade pip==24.0 
            pip3 install --no-warn-script-location --user -r requirements.container.txt
            /home/glue_user/.local/bin/pytest -p no:cacheprovider
  shell:
    name: Shell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Check shell scripts using shellcheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          scandir: '.'
  dockerfile:
    name: Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Validate Dockerfile using hadolint
        uses: hadolint/hadolint-action@v3.1.0
        